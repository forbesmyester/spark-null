#!/bin/bash
set -euo pipefail
IFS=$'\n\t'
ZERO_IS_NULL=0
INVERT=0
MAXIMUM=-1
MINIMUM=-1

show_help() {
    echo "NAME:"
    echo "  $0 Wrapper around holman/spark adding max / min / inverse / null"
    echo ""
    echo "USAGE:"
    echo "  some_command_that_writes_to_stdout | $0 [-m MINIMUM] [-n MAXIMUM] [-0] [-i]"
    echo ""
    echo "GLOBAL OPTIONS:"
    echo "  -i = Use an inverted graph"
    echo "  -m = Set the minimum value"
    echo "  -n = Set the maximum value"
    echo "  -0 = Make '0' act like 'n'"
    echo "  -h = Show help"
    echo ""
    exit 0
}

min() {
    VALS=("$@")
    MIN=${VALS[0]}
    for CURRENT in "${VALS[@]}"; do
        if [ "$CURRENT" -lt "$MIN" ]; then
            MIN=$CURRENT
        fi
    done
    echo $MIN
}

max() {
    VALS=("$@")
    MAX=${VALS[0]}
    for CURRENT in "${VALS[@]}"; do
        if [ "$CURRENT" -gt "$MAX" ]; then
            MAX=$CURRENT
        fi
    done
    echo $MAX
}

while getopts "ih0m:n:" opt; do
    case "$opt" in
        i)  INVERT=1
            ;;
        n)  MAXIMUM="$OPTARG"
            ;;
        m)  MINIMUM="$OPTARG"
            ;;
        0)
            ZERO_IS_NULL=1
            ;;
        h)
            show_help
            exit 0
            ;;
    esac
done
shift $(( OPTIND - 1 ))

IN_LINE=""
while read line
do
    IN_LINE="${IN_LINE} $line"
done < "/dev/stdin"

VALUES=()
HOLE_POSITIONS=()

if [ "$MINIMUM" -gt -1 ]; then
    VALUES+=("${MINIMUM}")
fi

if [ "$MAXIMUM" -gt -1 ]; then
    VALUES+=("${MAXIMUM}")
fi

IFS=$' \n\t'

read -ra ITEMS <<< "$IN_LINE"
I=0
for ITEM in "${ITEMS[@]}"; do
    if [[ "$ITEM" != "n" ]] && [ "$ITEM" -eq 0 ] && [ "$ZERO_IS_NULL" -gt 0 ]; then
        ITEM="n"
    fi
    if [ "${ITEM}" = "n" ]; then
        HOLE_POSITIONS+=("${I}")
    else
        VALUES+=("${ITEM}")
        I=$(( $I + 1 ))
    fi
done

IFS=$'\n\t'

if [ "$INVERT" -gt 0 ]; then
    MAX=$(max "${VALUES[@]}")
    MIN=$(min "${VALUES[@]}")
    for I in "${!VALUES[@]}"; do 
        VALUES[$I]=$(($MAX - "${VALUES[$I]}"))
    done
fi


GRAPH=$(echo "${VALUES[*]}" | spark)

if [ "$MINIMUM" -gt -1 ]; then
    GRAPH="${GRAPH:1}"
fi

if [ "$MAXIMUM" -gt -1 ]; then
    GRAPH="${GRAPH:1}"
fi

OUT=""

for (( I=0; I<${#GRAPH}; I++ )); do
    while [ ${#HOLE_POSITIONS[@]} -gt 0 ] && [ ${HOLE_POSITIONS[0]} -eq $I ]; do
        HOLE_POSITIONS=( "${HOLE_POSITIONS[@]:1}" )
        OUT+=" "
    done
    OUT+="${GRAPH:$I:1}"
done

echo $OUT
